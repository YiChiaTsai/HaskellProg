Answer to Bonus:

pipeline可以把多個函式依次丟到一組list ([, , , ...])中做操作，最後得到一個計算完的list ([, , , …])。
例如我執行：
Prelude> let pipeline = map . foldr (.) id
Prelude> pipeline [pred, (*3), (+2)] [1,2,3,4] 
[8,11,14,17]

首先它會把[1,2,3,4]作(+2)得[3,4,5,6]，接著(*3)得[8,12,15,18]，最後再取pred(前一位的意思)
得到最後回傳的答案[8,11,14,17]。
所以說感覺很像是foldr(+2)foldr(*3)foldr(pred)，折疊這些function後依序讓map套用到[1,2,3,4]上。
